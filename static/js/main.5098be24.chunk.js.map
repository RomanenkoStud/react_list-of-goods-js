{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","sortValue","setSortValue","isReverse","setIsReverse","visibleGoods","goods","newGoods","sort","good1","good2","localeCompare","length","reverse","prepareGoods","className","onClick","type","classNames","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SA2BhB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EA7BR,SAAsBC,EAAtB,GAAwD,IAAzBL,EAAwB,EAAxBA,UAAWE,EAAa,EAAbA,UAClCI,EAAQ,YAAOD,GAqBrB,OAnBIL,GACFM,EAASC,MAAK,SAACC,EAAOC,GACpB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,GACFI,EAASM,UAGJN,EAOcO,CAAalB,EAAiB,CAAEK,YAAWE,cAEhE,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMd,EAAaL,IAC5BoB,KAAK,SACLF,UACEG,IAAW,SAAU,UAAW,CAC9B,WAAYjB,IAAcJ,IALhC,iCAYA,wBACEmB,QAAS,kBAAMd,EAAaJ,IAC5BmB,KAAK,SACLF,UACEG,IAAW,SAAU,aAAc,CACjC,WAAYjB,IAAcH,IALhC,4BAYA,wBACEkB,QAAS,kBAAMZ,GAAcD,IAC7Bc,KAAK,SACLF,UACEG,IAAW,SAAU,aAAc,CACjC,YAAaf,IALnB,sBAYgB,KAAdF,GAAoBE,IACpB,wBACEa,QAAS,WACPd,EAAa,IACbE,GAAa,IAEfa,KAAK,SACLF,UAAU,4BANZ,sBAaJ,6BACGV,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCxGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5098be24.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\n\nfunction prepareGoods(goods, { sortValue, isReverse }) {\n  const newGoods = [...goods];\n\n  if (sortValue) {\n    newGoods.sort((good1, good2) => {\n      switch (sortValue) {\n        case SORT_BY_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    newGoods.reverse();\n  }\n\n  return newGoods;\n}\n\nexport const App = () => {\n  const [sortValue, setSortValue] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n\n  const visibleGoods = prepareGoods(goodsFromServer, { sortValue, isReverse });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortValue(SORT_BY_ALPHABET)}\n          type=\"button\"\n          className={\n            classNames('button', 'is-info', {\n              'is-light': sortValue !== SORT_BY_ALPHABET,\n            })\n          }\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortValue(SORT_BY_LENGTH)}\n          type=\"button\"\n          className={\n            classNames('button', 'is-success', {\n              'is-light': sortValue !== SORT_BY_LENGTH,\n            })\n          }\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReverse(!isReverse)}\n          type=\"button\"\n          className={\n            classNames('button', 'is-warning', {\n              'is-light': !isReverse,\n            })\n          }\n        >\n          Reverse\n        </button>\n\n        {(sortValue !== '' || isReverse) && (\n          <button\n            onClick={() => {\n              setSortValue('');\n              setIsReverse(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}